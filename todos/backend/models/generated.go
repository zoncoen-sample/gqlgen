// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package models

type Node interface {
	IsNode()
}

type CreateTodoInput struct {
	ClientMutationID string `json:"clientMutationId"`
	Text             string `json:"text"`
	UserID           string `json:"userId"`
}

type CreateTodoPayload struct {
	ClientMutationID string `json:"clientMutationId"`
	Todo             *Todo  `json:"todo"`
}

type DeleteTodoInput struct {
	ClientMutationID string `json:"clientMutationId"`
	ID               string `json:"id"`
}

type DeleteTodoPayload struct {
	ClientMutationID string `json:"clientMutationId"`
	ID               string `json:"id"`
}

type NoopInput struct {
	ClientMutationID string `json:"clientMutationId"`
}

type NoopPayload struct {
	ClientMutationID string `json:"clientMutationId"`
}

type PageInfo struct {
	HasNextPage     bool    `json:"hasNextPage"`
	HasPreviousPage bool    `json:"hasPreviousPage"`
	StartCursor     *string `json:"startCursor"`
	EndCursor       *string `json:"endCursor"`
}

type TodoConnection struct {
	PageInfo *PageInfo   `json:"pageInfo"`
	Edges    []*TodoEdge `json:"edges"`
	Nodes    []*Todo     `json:"nodes"`
}

type TodoEdge struct {
	Cursor string `json:"cursor"`
	Node   *Todo  `json:"node"`
}

type ToggleTodoInput struct {
	ClientMutationID string `json:"clientMutationId"`
	ID               string `json:"id"`
	Done             bool   `json:"done"`
}

type ToggleTodoPayload struct {
	ClientMutationID string `json:"clientMutationId"`
	ID               string `json:"id"`
	Done             bool   `json:"done"`
}

type User struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}

func (User) IsNode() {}
